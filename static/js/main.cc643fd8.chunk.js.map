{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","avatar","src","mContainer","name","messageText","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","h","m","l","filterAffairs","d","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyUpHandler","inputClass","value","onKeyPress","onChange","GreetingContainer","users","addUserCallback","setName","setError","trim","alert","length","e","currentTarget","HW3","setUsers","userName","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","Error404","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Navbar","likeLink","Header","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,4BAA4B,KAAO,sBAAsB,YAAc,6BAA6B,KAAO,wB,oBCA9MD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,gBCA1HD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,sB,gBCApDD,EAAOC,QAAU,CAAC,SAAW,2B,iBCA7BD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,gBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,qBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,0B,uLCsBnDC,MAbf,SAAiBC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SACd,yBAAKF,UAAWC,IAAEE,QAAQ,yBAAMC,IAAKL,EAAMI,UAC3C,yBAAKH,UAAWC,IAAEI,YAClB,yBAAKL,UAAWC,IAAEK,MAAOP,EAAMO,MAC/B,yBAAKN,UAAWC,IAAEM,aAAcR,EAAMG,SACtC,yBAAKF,UAAWC,IAAEO,MAAOT,EAAMS,SCdrCC,EACM,qFADNA,EAEI,YAFJA,EAGO,oBAHPA,EAII,QAwBKC,MArBf,WACI,OACI,6BACI,6BADJ,cAII,kBAAC,EAAD,CACIP,OAAQM,EACRH,KAAMG,EACNP,QAASO,EACTD,KAAMC,M,OCAPE,MAXf,SAAgBZ,GAGZ,OACI,6BACKA,EAAMa,OAAON,KACd,4BAAQO,QALO,WAAOd,EAAMe,qBAAqBf,EAAMa,OAAOG,OAK9D,OCsBGC,MA3Bf,SAAiBjB,GACb,IAAMkB,EAAgBlB,EAAMmB,KAAKC,KAAI,SAACC,GAAD,OACjC,kBAAC,EAAD,CACIC,IAAKD,EAAEL,IACPH,OAAQQ,EACRN,qBAAsBf,EAAMe,0BASpC,OACI,6BAEKG,EAED,4BAAQJ,QAVD,WAAOd,EAAMuB,UAAU,SAU9B,OACA,4BAAQT,QAVA,WAAOd,EAAMuB,UAAU,UAU/B,QACA,4BAAQT,QAVE,WAAOd,EAAMuB,UAAU,YAUjC,UACA,4BAAQT,QAVD,WAAOd,EAAMuB,UAAU,SAU9B,SCvBNC,EAAoC,CACtC,CAACR,IAAK,EAAGT,KAAM,QAASkB,SAAU,QAClC,CAACT,IAAK,EAAGT,KAAM,QAASkB,SAAU,OAClC,CAACT,IAAK,EAAGT,KAAM,QAASkB,SAAU,OAClC,CAACT,IAAK,EAAGT,KAAM,OAAQkB,SAAU,QACjC,CAACT,IAAK,EAAGT,KAAM,aAAckB,SAAU,WA0C5BC,MA3Bf,WAAgB,IAAD,EACmBC,mBAA4BH,GAD/C,mBACJI,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIP,EAFJ,KAILQ,EAfmB,SAACH,EAA4BE,GAEtD,MAAe,SAAXA,EAA0BF,EAAQE,QAAQ,SAAAE,GAAC,MAAmB,SAAfA,EAAEP,YACtC,WAAXK,EAA4BF,EAAQE,QAAQ,SAAAG,GAAC,MAAmB,WAAfA,EAAER,YACxC,QAAXK,EAAyBF,EAAQE,QAAQ,SAAAI,GAAC,MAAmB,QAAfA,EAAET,YACxCG,EAUYO,CAAcP,EAASE,GAG/C,OACI,6BACI,6BADJ,cAKI,kBAAC,EAAD,CACIX,KAAMY,EACNR,UAAWA,EACXR,qBAXiB,SAACC,GAAD,OAAiBa,EATtB,SAACD,EAA4BZ,GACrD,OAAOY,EAAQE,QAAQ,SAAAM,GAAC,OAAIA,EAAEpB,MAAOA,KAQoBqB,CAAaT,EAASZ,OAcvE,6BAGA,+B,yBCvBGsB,EAf+B,SAAC,GAEzC,IADD/B,EACA,EADAA,KAAMgC,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAAYC,EACnD,EADmDA,eAE9CC,EAAaH,EAAQvC,IAAEuC,MAAQ,GAErC,OACI,6BACI,2BAAOI,MAAOtC,EAAMuC,WAAYH,EAAgBI,SAAUR,EAAiBtC,UAAW2C,IACtF,8BAAOH,GACP,4BAAQ3B,QAAS0B,GAAjB,OACA,8BAAOE,KC+BJM,EAxCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEvB,mBAAiB,IADiD,mBACnFpB,EADmF,KAC7E4C,EAD6E,OAEhExB,mBAAwB,IAFwC,mBAEnFc,EAFmF,KAE5EW,EAF4E,KAUpFZ,EAAU,WACRjC,EAAK8C,QACLH,EAAgB3C,EAAK8C,QACrBF,EAAQ,IACRG,MAAM,SAAD,OAAU/C,EAAK8C,OAAf,SAELD,EAAS,eAUXV,EAAaO,EAAMM,OAEzB,OACI,kBAAC,EAAD,CACIhD,KAAMA,EACNgC,gBA3BgB,SAACiB,GACrBJ,EAAS,MACTD,EAAQK,EAAEC,cAAcZ,QA0BpBL,QAASA,EACTC,MAAOA,EACPC,WAAYA,EACZC,eAfe,SAACa,GACN,UAAVA,EAAElC,KACFkB,Q,QCDGkB,MAxBf,WAAgB,IAAD,EACe/B,mBAA0B,IADzC,mBACJsB,EADI,KACGU,EADH,KAQX,OACI,6BACI,6BADJ,cAKI,kBAAC,EAAD,CAAmBV,MAAOA,EAAOC,gBAXjB,SAAC3C,GACrB,IAAIqD,EAAsB,CAAC5C,IAAI6C,cAAMtD,KAAKA,GAC1CoD,EAAS,CAACC,GAAF,mBAAeX,QAWnB,6BAGA,+B,yBC4BGa,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEhB,EAOH,EAPGA,SAAUiB,EAOb,EAPaA,aACVlB,EAMH,EANGA,WAAYmB,EAMf,EANeA,QACZxB,EAKH,EALGA,MACAxC,EAIH,EAJGA,UAAWiE,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMlE,IAAEuC,MAAR,YAAiByB,GAAgC,IACnEG,EAAmB,UAAM5B,EAAQvC,IAAEoE,WAAapE,IAAEqE,WAA/B,YAA8CtE,GAEvE,OACI,oCACI,yCACI8D,KAAM,OACNhB,SArBa,SAACS,GACtBT,GACGA,EAASS,GAEZQ,GAAgBA,EAAaR,EAAEC,cAAcZ,QAkBrCC,WAhBe,SAACU,GACxBV,GAAcA,EAAWU,GAEf,UAAVA,EAAElC,KACC2C,GACAA,KAYKhE,UAAWoE,GAEPF,IAEP1B,GAAS,0BAAMxC,UAAWmE,GAAqB3B,K,kCC1B7C+B,EAhBqC,SAAC,GAKhD,EAHGC,IAGF,IAHOxE,EAGR,EAHQA,UAAWwC,EAGnB,EAHmBA,MACb0B,EAEN,2CACKO,EAAc,UAAMjC,EAAQvC,IAAEuE,IAAMvE,IAAEyE,QAAxB,YAAmC1E,GAEvD,OACI,0CACIA,UAAWyE,GACPP,K,iBCsBDS,EAjCyC,SAAC,GASpD,EAPGb,KAOH,EANGhB,SAMF,IANY8B,EAMb,EANaA,gBACV5E,EAKH,EALGA,UACA6E,GAIH,EALcZ,cAKd,EAJGY,UAEGX,EAEN,4FAQKE,EAAmB,UAAMnE,IAAE6E,SAAR,YAAoB9E,GAAwB,IAErE,OACI,+BACI,yCACI8D,KAAM,WACNhB,SAba,SAACS,GAGtBqB,GAAmBA,EAAgBrB,EAAEC,cAAcuB,UAW3C/E,UAAWoE,GAEPF,IAEPW,GAAY,0BAAM7E,UAAWC,IAAEgE,eAAgBY,KC4B7CG,MA7Df,WAAgB,IAAD,EACatD,mBAAiB,IAD9B,mBACJuD,EADI,KACEC,EADF,KAEL1C,EAAQyC,EAAO,GAAK,QACpBE,EAAY,WACV3C,EACAa,MAAM,gFAENA,MAAM4B,IAPH,EAWmBvD,oBAAkB,GAXrC,mBAWJqD,EAXI,KAWKK,EAXL,KAcX,OACI,6BACI,6BADJ,cAII,yBAAKpF,UAAWC,IAAEoF,QAEd,kBAAC,EAAD,CACIzC,MAAOqC,EACPlB,aAAcmB,EACdlB,QAASmB,EACT3C,MAAOA,EACPxC,UAAWC,IAAEqF,OAIjB,kBAAC,EAAD,CACItF,UAAWC,IAAEqF,KACb9C,MAASA,EACTgC,KAAG,EACH3D,QAASsE,GAJb,WAUA,kBAAC,EAAD,CACIJ,QAASA,EACTH,gBAAiBQ,GAFrB,eAWJ,6BAKA,+BC3CGG,MAbf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAGC,MAVf,WACI,OACI,6BACI,oCACA,gDACA,mFCLL,SAASC,IACZ,OACI,uCCAD,SAASC,IACZ,OACI,2CCCD,IAAMC,EACG,cADHA,EAED,UAFCA,EAGI,eA4BFC,MAxBf,WACI,OACI,6BAEI,kBAAC,IAAD,KAIA,kBAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAIL,OACpD,kBAAC,IAAD,CAAOE,KAAMF,EAAiBI,OAAQ,kBAAM,kBAAC,EAAD,SAC5C,kBAAC,IAAD,CAAOF,KAAMF,EAAaI,OAAQ,kBAAM,kBAACN,EAAD,SACxC,kBAAC,IAAD,CAAOI,KAAMF,EAAkBI,OAAQ,kBAAM,kBAACL,EAAD,SAM7C,kBAAC,IAAD,CAAOK,OAAQ,kBAAM,kBAAC,EAAD,Y,wBClBjC,SAASE,KAEL,OACI,6BACI,kBAAC,IAAD,CAASjG,UAAWC,IAAEiG,SAAUF,GAAIL,GAApC,aACA,kBAAC,IAAD,CAAS3F,UAAWC,IAAEiG,SAAUF,GAAIL,GAApC,UACA,kBAAC,IAAD,CAAS3F,UAAWC,IAAEiG,SAAUF,GAAIL,GAApC,eAMGQ,OApBf,WACI,OACI,6BACI,kBAACF,GAAD,QCSGG,OAZf,WACI,OACI,6BAEI,kBAAC,IAAD,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,SCIDC,OATf,WACI,OACI,yBAAKrG,UAAWC,IAAEoG,KACd,iDACA,kBAAC,GAAD,QCEQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASZ,OACL,kBAAC,IAAMa,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAA7E,GACH8E,QAAQ9E,MAAMA,EAAMtC,c","file":"static/js/main.cc643fd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"avatar\":\"Message_avatar__3FT3j\",\"mContainer\":\"Message_mContainer__NGFbo\",\"name\":\"Message_name__Tzmp0\",\"messageText\":\"Message_messageText__tMBZ7\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"likeLink\":\"Header_likeLink__36_El\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\"};","import React from \"react\";\nimport s from \"./Message.module.css\";\n\n\ntype messageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\nfunction Message(props: messageType) {\n    return (\n        <div className={s.message}>\n            <div className={s.avatar}><img  src={props.avatar}/></div>\n            <div className={s.mContainer}>\n            <div className={s.name}>{props.name}</div>\n            <div className={s.messageText}>{props.message}</div>\n            <div className={s.time}>{props.time}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"npm start accept?\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            {/*should work (должно работать)*/}\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            {/*<hr/>*/}\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            {/*<hr/>*/}\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id:number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix\n\n    return (\n        <div>\n            {props.affair.name}\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter:FilterType) => void\n    deleteAffairCallback: (id:number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")}; // need to fix\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter(\"middle\")};\n    const setLow = () => {props.setFilter(\"low\")};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\"; // need to fix any\nexport type AffairType = { _id: number, name: string, priority: string }; // need to fix any\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    // if (filter === \"all\") return affairs;\n    if (filter === \"high\") return affairs.filter( h => h.priority === \"high\");\n    if (filter === \"middle\") return affairs.filter( m => m.priority === \"middle\")// need to fix\n    if (filter === \"low\") return affairs.filter( l => l.priority === \"low\")\n    else return affairs // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter( d => d._id !==_id ); // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void  // need to fix any\n    addUser: () => void // need to fix any\n    error: string | null // need to fix any\n    totalUsers: number // need to fix any\n    onKeyUpHandler: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onKeyUpHandler} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : \"\" ; // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onKeyPress={onKeyUpHandler} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any +\n    addUserCallback: (name:string) => void // need to fix any +\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string | null>(\"\"); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setError(null);\n        setName(e.currentTarget.value); // need to fix\n    };\n\n\n    const addUser = () => {\n        if (name.trim()) {\n            addUserCallback(name.trim())\n            setName(\"\")\n            alert(`Hello ${name.trim()} ! `);\n        } else  {\n            setError(\"enter name\")\n        }                                   // need to fix\n    };\n\n    const onKeyUpHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\") {\n            addUser()\n        }\n    };\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyUpHandler={onKeyUpHandler}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any +\n    name: string // need to fix any +\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let userName: UserType  = {_id:v1() ,name:name}\n        setUsers([userName, ...users]); // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput : s.superInput } ${className}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n    error?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className, error,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${error ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        // onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    //const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    className={s.blue}\n                    error = {error}\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                {/*<SuperCheckbox checked={checked} onChange={testOnChange}/>*/}\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\n\nexport function Junior () {\n    return(\n        <div>\n            Junior\n        </div>\n    )\n}\n\n","import React from \"react\";\n\n\n\nexport function JuniorPlus () {\n    return(\n        <div>JuniorPlus</div>\n    )\n}","import React from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport {Junior} from \"./pages/Junior\";\nimport {JuniorPlus} from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\"\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n\n\n\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport {PATH} from \"./Routes\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./Header.module.css\"\n\nfunction Header() {\n    return (\n        <div>\n            <Navbar/>\n        </div>\n    );\n}\n\nfunction Navbar() {\n\n    return (\n        <div>\n            <NavLink className={s.likeLink} to={PATH.PRE_JUNIOR}>PreJunior</NavLink>\n            <NavLink className={s.likeLink} to={PATH.JUNIOR}>Junior</NavLink>\n            <NavLink className={s.likeLink} to={PATH.JUNIOR_PLUS}>JuniorPlus</NavLink>\n        </div>\n    );\n}\n\n\nexport default Header;\n\n\n\n\n\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <Header/>\n                <Routes/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>React homeworks:</div>\n            <HW5/>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}